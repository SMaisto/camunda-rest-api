/**
 * Camunda BPM REST API
 * OpenApi Spec for Camunda BPM REST API.
 *
 * The version of the OpenAPI document: 7.14.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ExternalTaskDto model module.
 * @module model/ExternalTaskDto
 * @version 7.14.0
 */
class ExternalTaskDto {
    /**
     * @member {String} activityId
     * @type {String}
     */
    activityId;
    /**
     * @member {String} activityInstanceId
     * @type {String}
     */
    activityInstanceId;
    /**
     * @member {String} errorMessage
     * @type {String}
     */
    errorMessage;
    /**
     * @member {String} executionId
     * @type {String}
     */
    executionId;
    /**
     * @member {String} id
     * @type {String}
     */
    id;
    /**
     * @member {Date} lockExpirationTime
     * @type {Date}
     */
    lockExpirationTime;
    /**
     * @member {String} processDefinitionId
     * @type {String}
     */
    processDefinitionId;
    /**
     * @member {String} processDefinitionKey
     * @type {String}
     */
    processDefinitionKey;
    /**
     * @member {String} processDefinitionVersionTag
     * @type {String}
     */
    processDefinitionVersionTag;
    /**
     * @member {String} processInstanceId
     * @type {String}
     */
    processInstanceId;
    /**
     * @member {String} tenantId
     * @type {String}
     */
    tenantId;
    /**
     * @member {Number} retries
     * @type {Number}
     */
    retries;
    /**
     * @member {Boolean} suspended
     * @type {Boolean}
     */
    suspended;
    /**
     * @member {String} workerId
     * @type {String}
     */
    workerId;
    /**
     * @member {String} topicName
     * @type {String}
     */
    topicName;
    /**
     * @member {Number} priority
     * @type {Number}
     */
    priority;
    /**
     * @member {String} businessKey
     * @type {String}
     */
    businessKey;

    

    /**
     * Constructs a new <code>ExternalTaskDto</code>.
     * An External Task object with the following properties
     * @alias module:model/ExternalTaskDto
     */
    constructor() { 
        
        ExternalTaskDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExternalTaskDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExternalTaskDto} obj Optional instance to populate.
     * @return {module:model/ExternalTaskDto} The populated <code>ExternalTaskDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExternalTaskDto();

            if (data.hasOwnProperty('activityId')) {
                obj['activityId'] = ApiClient.convertToType(data['activityId'], 'String');
            }
            if (data.hasOwnProperty('activityInstanceId')) {
                obj['activityInstanceId'] = ApiClient.convertToType(data['activityInstanceId'], 'String');
            }
            if (data.hasOwnProperty('errorMessage')) {
                obj['errorMessage'] = ApiClient.convertToType(data['errorMessage'], 'String');
            }
            if (data.hasOwnProperty('executionId')) {
                obj['executionId'] = ApiClient.convertToType(data['executionId'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('lockExpirationTime')) {
                obj['lockExpirationTime'] = ApiClient.convertToType(data['lockExpirationTime'], 'Date');
            }
            if (data.hasOwnProperty('processDefinitionId')) {
                obj['processDefinitionId'] = ApiClient.convertToType(data['processDefinitionId'], 'String');
            }
            if (data.hasOwnProperty('processDefinitionKey')) {
                obj['processDefinitionKey'] = ApiClient.convertToType(data['processDefinitionKey'], 'String');
            }
            if (data.hasOwnProperty('processDefinitionVersionTag')) {
                obj['processDefinitionVersionTag'] = ApiClient.convertToType(data['processDefinitionVersionTag'], 'String');
            }
            if (data.hasOwnProperty('processInstanceId')) {
                obj['processInstanceId'] = ApiClient.convertToType(data['processInstanceId'], 'String');
            }
            if (data.hasOwnProperty('tenantId')) {
                obj['tenantId'] = ApiClient.convertToType(data['tenantId'], 'String');
            }
            if (data.hasOwnProperty('retries')) {
                obj['retries'] = ApiClient.convertToType(data['retries'], 'Number');
            }
            if (data.hasOwnProperty('suspended')) {
                obj['suspended'] = ApiClient.convertToType(data['suspended'], 'Boolean');
            }
            if (data.hasOwnProperty('workerId')) {
                obj['workerId'] = ApiClient.convertToType(data['workerId'], 'String');
            }
            if (data.hasOwnProperty('topicName')) {
                obj['topicName'] = ApiClient.convertToType(data['topicName'], 'String');
            }
            if (data.hasOwnProperty('priority')) {
                obj['priority'] = ApiClient.convertToType(data['priority'], 'Number');
            }
            if (data.hasOwnProperty('businessKey')) {
                obj['businessKey'] = ApiClient.convertToType(data['businessKey'], 'String');
            }
        }
        return obj;
    }
}



export default ExternalTaskDto;

