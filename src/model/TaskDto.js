/**
 * Camunda BPM REST API
 * OpenApi Spec for Camunda BPM REST API.
 *
 * The version of the OpenAPI document: 7.14.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TaskDto model module.
 * @module model/TaskDto
 * @version 7.14.0
 */
class TaskDto {
    /**
     * @member {String} id
     * @type {String}
     */
    id;
    /**
     * @member {String} name
     * @type {String}
     */
    name;
    /**
     * @member {String} assignee
     * @type {String}
     */
    assignee;
    /**
     * @member {String} owner
     * @type {String}
     */
    owner;
    /**
     * @member {Date} created
     * @type {Date}
     */
    created;
    /**
     * @member {Date} due
     * @type {Date}
     */
    due;
    /**
     * @member {Date} followUp
     * @type {Date}
     */
    followUp;
    /**
     * @member {TaskDto.DelegationStateEnum} delegationState
     * @type {TaskDto.DelegationStateEnum}
     */
    delegationState;
    /**
     * @member {String} description
     * @type {String}
     */
    description;
    /**
     * @member {String} executionId
     * @type {String}
     */
    executionId;
    /**
     * @member {String} parentTaskId
     * @type {String}
     */
    parentTaskId;
    /**
     * @member {Number} priority
     * @type {Number}
     */
    priority;
    /**
     * @member {String} processDefinitionId
     * @type {String}
     */
    processDefinitionId;
    /**
     * @member {String} processInstanceId
     * @type {String}
     */
    processInstanceId;
    /**
     * @member {String} caseExecutionId
     * @type {String}
     */
    caseExecutionId;
    /**
     * @member {String} caseDefinitionId
     * @type {String}
     */
    caseDefinitionId;
    /**
     * @member {String} caseInstanceId
     * @type {String}
     */
    caseInstanceId;
    /**
     * @member {String} taskDefinitionKey
     * @type {String}
     */
    taskDefinitionKey;
    /**
     * @member {Boolean} suspended
     * @type {Boolean}
     */
    suspended;
    /**
     * @member {String} formKey
     * @type {String}
     */
    formKey;
    /**
     * @member {String} tenantId
     * @type {String}
     */
    tenantId;

    

    /**
     * Constructs a new <code>TaskDto</code>.
     * @alias module:model/TaskDto
     */
    constructor() { 
        
        TaskDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TaskDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TaskDto} obj Optional instance to populate.
     * @return {module:model/TaskDto} The populated <code>TaskDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TaskDto();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('assignee')) {
                obj['assignee'] = ApiClient.convertToType(data['assignee'], 'String');
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = ApiClient.convertToType(data['owner'], 'String');
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Date');
            }
            if (data.hasOwnProperty('due')) {
                obj['due'] = ApiClient.convertToType(data['due'], 'Date');
            }
            if (data.hasOwnProperty('followUp')) {
                obj['followUp'] = ApiClient.convertToType(data['followUp'], 'Date');
            }
            if (data.hasOwnProperty('delegationState')) {
                obj['delegationState'] = ApiClient.convertToType(data['delegationState'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('executionId')) {
                obj['executionId'] = ApiClient.convertToType(data['executionId'], 'String');
            }
            if (data.hasOwnProperty('parentTaskId')) {
                obj['parentTaskId'] = ApiClient.convertToType(data['parentTaskId'], 'String');
            }
            if (data.hasOwnProperty('priority')) {
                obj['priority'] = ApiClient.convertToType(data['priority'], 'Number');
            }
            if (data.hasOwnProperty('processDefinitionId')) {
                obj['processDefinitionId'] = ApiClient.convertToType(data['processDefinitionId'], 'String');
            }
            if (data.hasOwnProperty('processInstanceId')) {
                obj['processInstanceId'] = ApiClient.convertToType(data['processInstanceId'], 'String');
            }
            if (data.hasOwnProperty('caseExecutionId')) {
                obj['caseExecutionId'] = ApiClient.convertToType(data['caseExecutionId'], 'String');
            }
            if (data.hasOwnProperty('caseDefinitionId')) {
                obj['caseDefinitionId'] = ApiClient.convertToType(data['caseDefinitionId'], 'String');
            }
            if (data.hasOwnProperty('caseInstanceId')) {
                obj['caseInstanceId'] = ApiClient.convertToType(data['caseInstanceId'], 'String');
            }
            if (data.hasOwnProperty('taskDefinitionKey')) {
                obj['taskDefinitionKey'] = ApiClient.convertToType(data['taskDefinitionKey'], 'String');
            }
            if (data.hasOwnProperty('suspended')) {
                obj['suspended'] = ApiClient.convertToType(data['suspended'], 'Boolean');
            }
            if (data.hasOwnProperty('formKey')) {
                obj['formKey'] = ApiClient.convertToType(data['formKey'], 'String');
            }
            if (data.hasOwnProperty('tenantId')) {
                obj['tenantId'] = ApiClient.convertToType(data['tenantId'], 'String');
            }
        }
        return obj;
    }
}


/**
 * Allowed values for the <code>delegationState</code> property.
 * @enum {String}
 * @readonly
 */
TaskDto['DelegationStateEnum'] = {

    /**
     * value: "PENDING"
     * @const
     */
    "PENDING": "PENDING",

    /**
     * value: "RESOLVED"
     * @const
     */
    "RESOLVED": "RESOLVED"
};



export default TaskDto;

