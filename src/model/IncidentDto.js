/**
 * Camunda BPM REST API
 * OpenApi Spec for Camunda BPM REST API.
 *
 * The version of the OpenAPI document: 7.14.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The IncidentDto model module.
 * @module model/IncidentDto
 * @version 7.14.0
 */
class IncidentDto {
    /**
     * @member {String} id
     * @type {String}
     */
    id;
    /**
     * @member {String} processDefinitionId
     * @type {String}
     */
    processDefinitionId;
    /**
     * @member {String} processInstanceId
     * @type {String}
     */
    processInstanceId;
    /**
     * @member {String} executionId
     * @type {String}
     */
    executionId;
    /**
     * @member {Date} incidentTimestamp
     * @type {Date}
     */
    incidentTimestamp;
    /**
     * @member {String} incidentType
     * @type {String}
     */
    incidentType;
    /**
     * @member {String} activityId
     * @type {String}
     */
    activityId;
    /**
     * @member {String} failedActivityId
     * @type {String}
     */
    failedActivityId;
    /**
     * @member {String} causeIncidentId
     * @type {String}
     */
    causeIncidentId;
    /**
     * @member {String} rootCauseIncidentId
     * @type {String}
     */
    rootCauseIncidentId;
    /**
     * @member {String} configuration
     * @type {String}
     */
    configuration;
    /**
     * @member {String} tenantId
     * @type {String}
     */
    tenantId;
    /**
     * @member {String} incidentMessage
     * @type {String}
     */
    incidentMessage;
    /**
     * @member {String} jobDefinitionId
     * @type {String}
     */
    jobDefinitionId;

    

    /**
     * Constructs a new <code>IncidentDto</code>.
     * @alias module:model/IncidentDto
     */
    constructor() { 
        
        IncidentDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>IncidentDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IncidentDto} obj Optional instance to populate.
     * @return {module:model/IncidentDto} The populated <code>IncidentDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IncidentDto();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('processDefinitionId')) {
                obj['processDefinitionId'] = ApiClient.convertToType(data['processDefinitionId'], 'String');
            }
            if (data.hasOwnProperty('processInstanceId')) {
                obj['processInstanceId'] = ApiClient.convertToType(data['processInstanceId'], 'String');
            }
            if (data.hasOwnProperty('executionId')) {
                obj['executionId'] = ApiClient.convertToType(data['executionId'], 'String');
            }
            if (data.hasOwnProperty('incidentTimestamp')) {
                obj['incidentTimestamp'] = ApiClient.convertToType(data['incidentTimestamp'], 'Date');
            }
            if (data.hasOwnProperty('incidentType')) {
                obj['incidentType'] = ApiClient.convertToType(data['incidentType'], 'String');
            }
            if (data.hasOwnProperty('activityId')) {
                obj['activityId'] = ApiClient.convertToType(data['activityId'], 'String');
            }
            if (data.hasOwnProperty('failedActivityId')) {
                obj['failedActivityId'] = ApiClient.convertToType(data['failedActivityId'], 'String');
            }
            if (data.hasOwnProperty('causeIncidentId')) {
                obj['causeIncidentId'] = ApiClient.convertToType(data['causeIncidentId'], 'String');
            }
            if (data.hasOwnProperty('rootCauseIncidentId')) {
                obj['rootCauseIncidentId'] = ApiClient.convertToType(data['rootCauseIncidentId'], 'String');
            }
            if (data.hasOwnProperty('configuration')) {
                obj['configuration'] = ApiClient.convertToType(data['configuration'], 'String');
            }
            if (data.hasOwnProperty('tenantId')) {
                obj['tenantId'] = ApiClient.convertToType(data['tenantId'], 'String');
            }
            if (data.hasOwnProperty('incidentMessage')) {
                obj['incidentMessage'] = ApiClient.convertToType(data['incidentMessage'], 'String');
            }
            if (data.hasOwnProperty('jobDefinitionId')) {
                obj['jobDefinitionId'] = ApiClient.convertToType(data['jobDefinitionId'], 'String');
            }
        }
        return obj;
    }
}



export default IncidentDto;

