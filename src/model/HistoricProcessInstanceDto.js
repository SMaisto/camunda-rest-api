/**
 * Camunda BPM REST API
 * OpenApi Spec for Camunda BPM REST API.
 *
 * The version of the OpenAPI document: 7.14.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The HistoricProcessInstanceDto model module.
 * @module model/HistoricProcessInstanceDto
 * @version 7.14.0
 */
class HistoricProcessInstanceDto {
    /**
     * @member {String} id
     * @type {String}
     */
    id;
    /**
     * @member {String} rootProcessInstanceId
     * @type {String}
     */
    rootProcessInstanceId;
    /**
     * @member {String} superProcessInstanceId
     * @type {String}
     */
    superProcessInstanceId;
    /**
     * @member {String} superCaseInstanceId
     * @type {String}
     */
    superCaseInstanceId;
    /**
     * @member {String} caseInstanceId
     * @type {String}
     */
    caseInstanceId;
    /**
     * @member {String} processDefinitionName
     * @type {String}
     */
    processDefinitionName;
    /**
     * @member {String} processDefinitionKey
     * @type {String}
     */
    processDefinitionKey;
    /**
     * @member {Number} processDefinitionVersion
     * @type {Number}
     */
    processDefinitionVersion;
    /**
     * @member {String} processDefinitionId
     * @type {String}
     */
    processDefinitionId;
    /**
     * @member {String} businessKey
     * @type {String}
     */
    businessKey;
    /**
     * @member {Date} startTime
     * @type {Date}
     */
    startTime;
    /**
     * @member {Date} endTime
     * @type {Date}
     */
    endTime;
    /**
     * @member {Date} removalTime
     * @type {Date}
     */
    removalTime;
    /**
     * @member {Number} durationInMillis
     * @type {Number}
     */
    durationInMillis;
    /**
     * @member {String} startUserId
     * @type {String}
     */
    startUserId;
    /**
     * @member {String} startActivityId
     * @type {String}
     */
    startActivityId;
    /**
     * @member {String} deleteReason
     * @type {String}
     */
    deleteReason;
    /**
     * @member {String} tenantId
     * @type {String}
     */
    tenantId;
    /**
     * @member {HistoricProcessInstanceDto.StateEnum} state
     * @type {HistoricProcessInstanceDto.StateEnum}
     */
    state;

    

    /**
     * Constructs a new <code>HistoricProcessInstanceDto</code>.
     * @alias module:model/HistoricProcessInstanceDto
     */
    constructor() { 
        
        HistoricProcessInstanceDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HistoricProcessInstanceDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HistoricProcessInstanceDto} obj Optional instance to populate.
     * @return {module:model/HistoricProcessInstanceDto} The populated <code>HistoricProcessInstanceDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HistoricProcessInstanceDto();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('rootProcessInstanceId')) {
                obj['rootProcessInstanceId'] = ApiClient.convertToType(data['rootProcessInstanceId'], 'String');
            }
            if (data.hasOwnProperty('superProcessInstanceId')) {
                obj['superProcessInstanceId'] = ApiClient.convertToType(data['superProcessInstanceId'], 'String');
            }
            if (data.hasOwnProperty('superCaseInstanceId')) {
                obj['superCaseInstanceId'] = ApiClient.convertToType(data['superCaseInstanceId'], 'String');
            }
            if (data.hasOwnProperty('caseInstanceId')) {
                obj['caseInstanceId'] = ApiClient.convertToType(data['caseInstanceId'], 'String');
            }
            if (data.hasOwnProperty('processDefinitionName')) {
                obj['processDefinitionName'] = ApiClient.convertToType(data['processDefinitionName'], 'String');
            }
            if (data.hasOwnProperty('processDefinitionKey')) {
                obj['processDefinitionKey'] = ApiClient.convertToType(data['processDefinitionKey'], 'String');
            }
            if (data.hasOwnProperty('processDefinitionVersion')) {
                obj['processDefinitionVersion'] = ApiClient.convertToType(data['processDefinitionVersion'], 'Number');
            }
            if (data.hasOwnProperty('processDefinitionId')) {
                obj['processDefinitionId'] = ApiClient.convertToType(data['processDefinitionId'], 'String');
            }
            if (data.hasOwnProperty('businessKey')) {
                obj['businessKey'] = ApiClient.convertToType(data['businessKey'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Date');
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'Date');
            }
            if (data.hasOwnProperty('removalTime')) {
                obj['removalTime'] = ApiClient.convertToType(data['removalTime'], 'Date');
            }
            if (data.hasOwnProperty('durationInMillis')) {
                obj['durationInMillis'] = ApiClient.convertToType(data['durationInMillis'], 'Number');
            }
            if (data.hasOwnProperty('startUserId')) {
                obj['startUserId'] = ApiClient.convertToType(data['startUserId'], 'String');
            }
            if (data.hasOwnProperty('startActivityId')) {
                obj['startActivityId'] = ApiClient.convertToType(data['startActivityId'], 'String');
            }
            if (data.hasOwnProperty('deleteReason')) {
                obj['deleteReason'] = ApiClient.convertToType(data['deleteReason'], 'String');
            }
            if (data.hasOwnProperty('tenantId')) {
                obj['tenantId'] = ApiClient.convertToType(data['tenantId'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
        }
        return obj;
    }
}


/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
HistoricProcessInstanceDto['StateEnum'] = {

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",

    /**
     * value: "SUSPENDED"
     * @const
     */
    "SUSPENDED": "SUSPENDED",

    /**
     * value: "COMPLETED"
     * @const
     */
    "COMPLETED": "COMPLETED",

    /**
     * value: "EXTERNALLY_TERMINATED"
     * @const
     */
    "EXTERNALLY_TERMINATED": "EXTERNALLY_TERMINATED",

    /**
     * value: "INTERNALLY_TERMINATED"
     * @const
     */
    "INTERNALLY_TERMINATED": "INTERNALLY_TERMINATED"
};



export default HistoricProcessInstanceDto;

