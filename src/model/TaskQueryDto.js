/**
 * Camunda BPM REST API
 * OpenApi Spec for Camunda BPM REST API.
 *
 * The version of the OpenAPI document: 7.14.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TaskQueryDtoSorting from './TaskQueryDtoSorting';
import VariableQueryParameterDto from './VariableQueryParameterDto';

/**
 * The TaskQueryDto model module.
 * @module model/TaskQueryDto
 * @version 7.14.0
 */
class TaskQueryDto {
    /**
     * @member {String} processInstanceId
     * @type {String}
     */
    processInstanceId;
    /**
     * @member {Array.<CodegenProperty{openApiType='string', baseName='processInstanceIdIn', complexType='null', getter='getProcessInstanceIdIn', setter='setProcessInstanceIdIn', description='null', dataType='String', datatypeWithEnum='String', dataFormat='null', name='processInstanceIdIn', min='null', max='null', defaultValue='null', defaultValueWithParam=' = ApiClient.convertToType(data['processInstanceIdIn'], 'String');', baseType='String', containerType='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='null', jsonSchema='{
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isLong=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isFreeFormObject=false, isArray=false, isMap=false, isEnum=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='ProcessInstanceIdIn', nameInSnakeCase='PROCESS_INSTANCE_ID_IN', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false}>} processInstanceIdIn
     * @type {Array.<CodegenProperty{openApiType='string', baseName='processInstanceIdIn', complexType='null', getter='getProcessInstanceIdIn', setter='setProcessInstanceIdIn', description='null', dataType='String', datatypeWithEnum='String', dataFormat='null', name='processInstanceIdIn', min='null', max='null', defaultValue='null', defaultValueWithParam=' = ApiClient.convertToType(data['processInstanceIdIn'], 'String');', baseType='String', containerType='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='null', jsonSchema='{
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isLong=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isFreeFormObject=false, isArray=false, isMap=false, isEnum=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='ProcessInstanceIdIn', nameInSnakeCase='PROCESS_INSTANCE_ID_IN', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false}>}
     */
    processInstanceIdIn;
    /**
     * @member {String} processInstanceBusinessKey
     * @type {String}
     */
    processInstanceBusinessKey;
    /**
     * @member {String} processInstanceBusinessKeyExpression
     * @type {String}
     */
    processInstanceBusinessKeyExpression;
    /**
     * @member {Array.<CodegenProperty{openApiType='string', baseName='processInstanceBusinessKeyIn', complexType='null', getter='getProcessInstanceBusinessKeyIn', setter='setProcessInstanceBusinessKeyIn', description='null', dataType='String', datatypeWithEnum='String', dataFormat='null', name='processInstanceBusinessKeyIn', min='null', max='null', defaultValue='null', defaultValueWithParam=' = ApiClient.convertToType(data['processInstanceBusinessKeyIn'], 'String');', baseType='String', containerType='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='null', jsonSchema='{
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isLong=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isFreeFormObject=false, isArray=false, isMap=false, isEnum=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='ProcessInstanceBusinessKeyIn', nameInSnakeCase='PROCESS_INSTANCE_BUSINESS_KEY_IN', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false}>} processInstanceBusinessKeyIn
     * @type {Array.<CodegenProperty{openApiType='string', baseName='processInstanceBusinessKeyIn', complexType='null', getter='getProcessInstanceBusinessKeyIn', setter='setProcessInstanceBusinessKeyIn', description='null', dataType='String', datatypeWithEnum='String', dataFormat='null', name='processInstanceBusinessKeyIn', min='null', max='null', defaultValue='null', defaultValueWithParam=' = ApiClient.convertToType(data['processInstanceBusinessKeyIn'], 'String');', baseType='String', containerType='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='null', jsonSchema='{
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isLong=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isFreeFormObject=false, isArray=false, isMap=false, isEnum=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='ProcessInstanceBusinessKeyIn', nameInSnakeCase='PROCESS_INSTANCE_BUSINESS_KEY_IN', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false}>}
     */
    processInstanceBusinessKeyIn;
    /**
     * @member {String} processInstanceBusinessKeyLike
     * @type {String}
     */
    processInstanceBusinessKeyLike;
    /**
     * @member {String} processInstanceBusinessKeyLikeExpression
     * @type {String}
     */
    processInstanceBusinessKeyLikeExpression;
    /**
     * @member {String} processDefinitionId
     * @type {String}
     */
    processDefinitionId;
    /**
     * @member {String} processDefinitionKey
     * @type {String}
     */
    processDefinitionKey;
    /**
     * @member {Array.<CodegenProperty{openApiType='string', baseName='processDefinitionKeyIn', complexType='null', getter='getProcessDefinitionKeyIn', setter='setProcessDefinitionKeyIn', description='null', dataType='String', datatypeWithEnum='String', dataFormat='null', name='processDefinitionKeyIn', min='null', max='null', defaultValue='null', defaultValueWithParam=' = ApiClient.convertToType(data['processDefinitionKeyIn'], 'String');', baseType='String', containerType='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='null', jsonSchema='{
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isLong=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isFreeFormObject=false, isArray=false, isMap=false, isEnum=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='ProcessDefinitionKeyIn', nameInSnakeCase='PROCESS_DEFINITION_KEY_IN', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false}>} processDefinitionKeyIn
     * @type {Array.<CodegenProperty{openApiType='string', baseName='processDefinitionKeyIn', complexType='null', getter='getProcessDefinitionKeyIn', setter='setProcessDefinitionKeyIn', description='null', dataType='String', datatypeWithEnum='String', dataFormat='null', name='processDefinitionKeyIn', min='null', max='null', defaultValue='null', defaultValueWithParam=' = ApiClient.convertToType(data['processDefinitionKeyIn'], 'String');', baseType='String', containerType='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='null', jsonSchema='{
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isLong=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isFreeFormObject=false, isArray=false, isMap=false, isEnum=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='ProcessDefinitionKeyIn', nameInSnakeCase='PROCESS_DEFINITION_KEY_IN', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false}>}
     */
    processDefinitionKeyIn;
    /**
     * @member {String} processDefinitionName
     * @type {String}
     */
    processDefinitionName;
    /**
     * @member {String} processDefinitionNameLike
     * @type {String}
     */
    processDefinitionNameLike;
    /**
     * @member {String} executionId
     * @type {String}
     */
    executionId;
    /**
     * @member {String} caseInstanceId
     * @type {String}
     */
    caseInstanceId;
    /**
     * @member {String} caseInstanceBusinessKey
     * @type {String}
     */
    caseInstanceBusinessKey;
    /**
     * @member {String} caseInstanceBusinessKeyLike
     * @type {String}
     */
    caseInstanceBusinessKeyLike;
    /**
     * @member {String} caseDefinitionId
     * @type {String}
     */
    caseDefinitionId;
    /**
     * @member {String} caseDefinitionKey
     * @type {String}
     */
    caseDefinitionKey;
    /**
     * @member {String} caseDefinitionName
     * @type {String}
     */
    caseDefinitionName;
    /**
     * @member {String} caseDefinitionNameLike
     * @type {String}
     */
    caseDefinitionNameLike;
    /**
     * @member {String} caseExecutionId
     * @type {String}
     */
    caseExecutionId;
    /**
     * @member {Array.<CodegenProperty{openApiType='string', baseName='activityInstanceIdIn', complexType='null', getter='getActivityInstanceIdIn', setter='setActivityInstanceIdIn', description='null', dataType='String', datatypeWithEnum='String', dataFormat='null', name='activityInstanceIdIn', min='null', max='null', defaultValue='null', defaultValueWithParam=' = ApiClient.convertToType(data['activityInstanceIdIn'], 'String');', baseType='String', containerType='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='null', jsonSchema='{
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isLong=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isFreeFormObject=false, isArray=false, isMap=false, isEnum=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='ActivityInstanceIdIn', nameInSnakeCase='ACTIVITY_INSTANCE_ID_IN', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false}>} activityInstanceIdIn
     * @type {Array.<CodegenProperty{openApiType='string', baseName='activityInstanceIdIn', complexType='null', getter='getActivityInstanceIdIn', setter='setActivityInstanceIdIn', description='null', dataType='String', datatypeWithEnum='String', dataFormat='null', name='activityInstanceIdIn', min='null', max='null', defaultValue='null', defaultValueWithParam=' = ApiClient.convertToType(data['activityInstanceIdIn'], 'String');', baseType='String', containerType='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='null', jsonSchema='{
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isLong=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isFreeFormObject=false, isArray=false, isMap=false, isEnum=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='ActivityInstanceIdIn', nameInSnakeCase='ACTIVITY_INSTANCE_ID_IN', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false}>}
     */
    activityInstanceIdIn;
    /**
     * @member {Array.<CodegenProperty{openApiType='string', baseName='tenantIdIn', complexType='null', getter='getTenantIdIn', setter='setTenantIdIn', description='null', dataType='String', datatypeWithEnum='String', dataFormat='null', name='tenantIdIn', min='null', max='null', defaultValue='null', defaultValueWithParam=' = ApiClient.convertToType(data['tenantIdIn'], 'String');', baseType='String', containerType='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='null', jsonSchema='{
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isLong=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isFreeFormObject=false, isArray=false, isMap=false, isEnum=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='TenantIdIn', nameInSnakeCase='TENANT_ID_IN', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false}>} tenantIdIn
     * @type {Array.<CodegenProperty{openApiType='string', baseName='tenantIdIn', complexType='null', getter='getTenantIdIn', setter='setTenantIdIn', description='null', dataType='String', datatypeWithEnum='String', dataFormat='null', name='tenantIdIn', min='null', max='null', defaultValue='null', defaultValueWithParam=' = ApiClient.convertToType(data['tenantIdIn'], 'String');', baseType='String', containerType='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='null', jsonSchema='{
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isLong=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isFreeFormObject=false, isArray=false, isMap=false, isEnum=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='TenantIdIn', nameInSnakeCase='TENANT_ID_IN', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false}>}
     */
    tenantIdIn;
    /**
     * @member {Boolean} withoutTenantId
     * @type {Boolean}
     * @default false
     */
    withoutTenantId = false;
    /**
     * @member {String} assignee
     * @type {String}
     */
    assignee;
    /**
     * @member {String} assigneeExpression
     * @type {String}
     */
    assigneeExpression;
    /**
     * @member {String} assigneeLike
     * @type {String}
     */
    assigneeLike;
    /**
     * @member {String} assigneeLikeExpression
     * @type {String}
     */
    assigneeLikeExpression;
    /**
     * @member {Array.<CodegenProperty{openApiType='string', baseName='assigneeIn', complexType='null', getter='getAssigneeIn', setter='setAssigneeIn', description='null', dataType='String', datatypeWithEnum='String', dataFormat='null', name='assigneeIn', min='null', max='null', defaultValue='null', defaultValueWithParam=' = ApiClient.convertToType(data['assigneeIn'], 'String');', baseType='String', containerType='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='null', jsonSchema='{
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isLong=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isFreeFormObject=false, isArray=false, isMap=false, isEnum=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='AssigneeIn', nameInSnakeCase='ASSIGNEE_IN', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false}>} assigneeIn
     * @type {Array.<CodegenProperty{openApiType='string', baseName='assigneeIn', complexType='null', getter='getAssigneeIn', setter='setAssigneeIn', description='null', dataType='String', datatypeWithEnum='String', dataFormat='null', name='assigneeIn', min='null', max='null', defaultValue='null', defaultValueWithParam=' = ApiClient.convertToType(data['assigneeIn'], 'String');', baseType='String', containerType='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='null', jsonSchema='{
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isLong=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isFreeFormObject=false, isArray=false, isMap=false, isEnum=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='AssigneeIn', nameInSnakeCase='ASSIGNEE_IN', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false}>}
     */
    assigneeIn;
    /**
     * @member {String} owner
     * @type {String}
     */
    owner;
    /**
     * @member {String} ownerExpression
     * @type {String}
     */
    ownerExpression;
    /**
     * @member {String} candidateGroup
     * @type {String}
     */
    candidateGroup;
    /**
     * @member {String} candidateGroupExpression
     * @type {String}
     */
    candidateGroupExpression;
    /**
     * @member {String} candidateUser
     * @type {String}
     */
    candidateUser;
    /**
     * @member {String} candidateUserExpression
     * @type {String}
     */
    candidateUserExpression;
    /**
     * @member {Boolean} includeAssignedTasks
     * @type {Boolean}
     * @default false
     */
    includeAssignedTasks = false;
    /**
     * @member {String} involvedUser
     * @type {String}
     */
    involvedUser;
    /**
     * @member {String} involvedUserExpression
     * @type {String}
     */
    involvedUserExpression;
    /**
     * @member {Boolean} assigned
     * @type {Boolean}
     * @default false
     */
    assigned = false;
    /**
     * @member {Boolean} unassigned
     * @type {Boolean}
     * @default false
     */
    unassigned = false;
    /**
     * @member {String} taskDefinitionKey
     * @type {String}
     */
    taskDefinitionKey;
    /**
     * @member {Array.<CodegenProperty{openApiType='string', baseName='taskDefinitionKeyIn', complexType='null', getter='getTaskDefinitionKeyIn', setter='setTaskDefinitionKeyIn', description='null', dataType='String', datatypeWithEnum='String', dataFormat='null', name='taskDefinitionKeyIn', min='null', max='null', defaultValue='null', defaultValueWithParam=' = ApiClient.convertToType(data['taskDefinitionKeyIn'], 'String');', baseType='String', containerType='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='null', jsonSchema='{
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isLong=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isFreeFormObject=false, isArray=false, isMap=false, isEnum=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='TaskDefinitionKeyIn', nameInSnakeCase='TASK_DEFINITION_KEY_IN', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false}>} taskDefinitionKeyIn
     * @type {Array.<CodegenProperty{openApiType='string', baseName='taskDefinitionKeyIn', complexType='null', getter='getTaskDefinitionKeyIn', setter='setTaskDefinitionKeyIn', description='null', dataType='String', datatypeWithEnum='String', dataFormat='null', name='taskDefinitionKeyIn', min='null', max='null', defaultValue='null', defaultValueWithParam=' = ApiClient.convertToType(data['taskDefinitionKeyIn'], 'String');', baseType='String', containerType='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='null', jsonSchema='{
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isLong=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isFreeFormObject=false, isArray=false, isMap=false, isEnum=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='TaskDefinitionKeyIn', nameInSnakeCase='TASK_DEFINITION_KEY_IN', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false}>}
     */
    taskDefinitionKeyIn;
    /**
     * @member {String} taskDefinitionKeyLike
     * @type {String}
     */
    taskDefinitionKeyLike;
    /**
     * @member {String} name
     * @type {String}
     */
    name;
    /**
     * @member {String} nameNotEqual
     * @type {String}
     */
    nameNotEqual;
    /**
     * @member {String} nameLike
     * @type {String}
     */
    nameLike;
    /**
     * @member {String} nameNotLike
     * @type {String}
     */
    nameNotLike;
    /**
     * @member {String} description
     * @type {String}
     */
    description;
    /**
     * @member {String} descriptionLike
     * @type {String}
     */
    descriptionLike;
    /**
     * @member {Number} priority
     * @type {Number}
     */
    priority;
    /**
     * @member {Number} maxPriority
     * @type {Number}
     */
    maxPriority;
    /**
     * @member {Number} minPriority
     * @type {Number}
     */
    minPriority;
    /**
     * @member {Date} dueDate
     * @type {Date}
     */
    dueDate;
    /**
     * @member {String} dueDateExpression
     * @type {String}
     */
    dueDateExpression;
    /**
     * @member {Date} dueAfter
     * @type {Date}
     */
    dueAfter;
    /**
     * @member {String} dueAfterExpression
     * @type {String}
     */
    dueAfterExpression;
    /**
     * @member {Date} dueBefore
     * @type {Date}
     */
    dueBefore;
    /**
     * @member {String} dueBeforeExpression
     * @type {String}
     */
    dueBeforeExpression;
    /**
     * @member {Date} followUpDate
     * @type {Date}
     */
    followUpDate;
    /**
     * @member {String} followUpDateExpression
     * @type {String}
     */
    followUpDateExpression;
    /**
     * @member {Date} followUpAfter
     * @type {Date}
     */
    followUpAfter;
    /**
     * @member {String} followUpAfterExpression
     * @type {String}
     */
    followUpAfterExpression;
    /**
     * @member {String} followUpBefore
     * @type {String}
     */
    followUpBefore;
    /**
     * @member {String} followUpBeforeExpression
     * @type {String}
     */
    followUpBeforeExpression;
    /**
     * @member {Date} followUpBeforeOrNotExistent
     * @type {Date}
     */
    followUpBeforeOrNotExistent;
    /**
     * @member {String} followUpBeforeOrNotExistentExpression
     * @type {String}
     */
    followUpBeforeOrNotExistentExpression;
    /**
     * @member {Date} createdOn
     * @type {Date}
     */
    createdOn;
    /**
     * @member {String} createdOnExpression
     * @type {String}
     */
    createdOnExpression;
    /**
     * @member {Date} createdAfter
     * @type {Date}
     */
    createdAfter;
    /**
     * @member {String} createdAfterExpression
     * @type {String}
     */
    createdAfterExpression;
    /**
     * @member {Date} createdBefore
     * @type {Date}
     */
    createdBefore;
    /**
     * @member {String} createdBeforeExpression
     * @type {String}
     */
    createdBeforeExpression;
    /**
     * @member {TaskQueryDto.DelegationStateEnum} delegationState
     * @type {TaskQueryDto.DelegationStateEnum}
     */
    delegationState;
    /**
     * @member {Array.<CodegenProperty{openApiType='string', baseName='candidateGroups', complexType='null', getter='getCandidateGroups', setter='setCandidateGroups', description='null', dataType='String', datatypeWithEnum='String', dataFormat='null', name='candidateGroups', min='null', max='null', defaultValue='null', defaultValueWithParam=' = ApiClient.convertToType(data['candidateGroups'], 'String');', baseType='String', containerType='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='null', jsonSchema='{
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isLong=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isFreeFormObject=false, isArray=false, isMap=false, isEnum=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='CandidateGroups', nameInSnakeCase='CANDIDATE_GROUPS', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false}>} candidateGroups
     * @type {Array.<CodegenProperty{openApiType='string', baseName='candidateGroups', complexType='null', getter='getCandidateGroups', setter='setCandidateGroups', description='null', dataType='String', datatypeWithEnum='String', dataFormat='null', name='candidateGroups', min='null', max='null', defaultValue='null', defaultValueWithParam=' = ApiClient.convertToType(data['candidateGroups'], 'String');', baseType='String', containerType='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='null', jsonSchema='{
  "type" : "string"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=true, isModel=false, isContainer=false, isString=true, isNumeric=false, isInteger=false, isLong=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isFreeFormObject=false, isArray=false, isMap=false, isEnum=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='CandidateGroups', nameInSnakeCase='CANDIDATE_GROUPS', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false}>}
     */
    candidateGroups;
    /**
     * @member {String} candidateGroupsExpression
     * @type {String}
     */
    candidateGroupsExpression;
    /**
     * @member {Boolean} withCandidateGroups
     * @type {Boolean}
     * @default false
     */
    withCandidateGroups = false;
    /**
     * @member {Boolean} withoutCandidateGroups
     * @type {Boolean}
     * @default false
     */
    withoutCandidateGroups = false;
    /**
     * @member {Boolean} withCandidateUsers
     * @type {Boolean}
     * @default false
     */
    withCandidateUsers = false;
    /**
     * @member {Boolean} withoutCandidateUsers
     * @type {Boolean}
     * @default false
     */
    withoutCandidateUsers = false;
    /**
     * @member {Boolean} active
     * @type {Boolean}
     * @default false
     */
    active = false;
    /**
     * @member {Boolean} suspended
     * @type {Boolean}
     * @default false
     */
    suspended = false;
    /**
     * @member {Array.<CodegenProperty{openApiType='VariableQueryParameterDto', baseName='taskVariables', complexType='VariableQueryParameterDto', getter='getTaskVariables', setter='setTaskVariables', description='null', dataType='VariableQueryParameterDto', datatypeWithEnum='VariableQueryParameterDto', dataFormat='null', name='taskVariables', min='null', max='null', defaultValue='null', defaultValueWithParam=' = VariableQueryParameterDto.constructFromObject(data['taskVariables']);', baseType='VariableQueryParameterDto', containerType='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='null', jsonSchema='{
  "$ref" : "#/components/schemas/VariableQueryParameterDto"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=false, isModel=true, isContainer=false, isString=false, isNumeric=false, isInteger=false, isLong=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isFreeFormObject=false, isArray=false, isMap=false, isEnum=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='TaskVariables', nameInSnakeCase='TASK_VARIABLES', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false}>} taskVariables
     * @type {Array.<CodegenProperty{openApiType='VariableQueryParameterDto', baseName='taskVariables', complexType='VariableQueryParameterDto', getter='getTaskVariables', setter='setTaskVariables', description='null', dataType='VariableQueryParameterDto', datatypeWithEnum='VariableQueryParameterDto', dataFormat='null', name='taskVariables', min='null', max='null', defaultValue='null', defaultValueWithParam=' = VariableQueryParameterDto.constructFromObject(data['taskVariables']);', baseType='VariableQueryParameterDto', containerType='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='null', jsonSchema='{
  "$ref" : "#/components/schemas/VariableQueryParameterDto"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=false, isModel=true, isContainer=false, isString=false, isNumeric=false, isInteger=false, isLong=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isFreeFormObject=false, isArray=false, isMap=false, isEnum=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='TaskVariables', nameInSnakeCase='TASK_VARIABLES', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false}>}
     */
    taskVariables;
    /**
     * @member {Array.<CodegenProperty{openApiType='VariableQueryParameterDto', baseName='processVariables', complexType='VariableQueryParameterDto', getter='getProcessVariables', setter='setProcessVariables', description='null', dataType='VariableQueryParameterDto', datatypeWithEnum='VariableQueryParameterDto', dataFormat='null', name='processVariables', min='null', max='null', defaultValue='null', defaultValueWithParam=' = VariableQueryParameterDto.constructFromObject(data['processVariables']);', baseType='VariableQueryParameterDto', containerType='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='null', jsonSchema='{
  "$ref" : "#/components/schemas/VariableQueryParameterDto"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=false, isModel=true, isContainer=false, isString=false, isNumeric=false, isInteger=false, isLong=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isFreeFormObject=false, isArray=false, isMap=false, isEnum=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='ProcessVariables', nameInSnakeCase='PROCESS_VARIABLES', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false}>} processVariables
     * @type {Array.<CodegenProperty{openApiType='VariableQueryParameterDto', baseName='processVariables', complexType='VariableQueryParameterDto', getter='getProcessVariables', setter='setProcessVariables', description='null', dataType='VariableQueryParameterDto', datatypeWithEnum='VariableQueryParameterDto', dataFormat='null', name='processVariables', min='null', max='null', defaultValue='null', defaultValueWithParam=' = VariableQueryParameterDto.constructFromObject(data['processVariables']);', baseType='VariableQueryParameterDto', containerType='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='null', jsonSchema='{
  "$ref" : "#/components/schemas/VariableQueryParameterDto"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=false, isModel=true, isContainer=false, isString=false, isNumeric=false, isInteger=false, isLong=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isFreeFormObject=false, isArray=false, isMap=false, isEnum=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='ProcessVariables', nameInSnakeCase='PROCESS_VARIABLES', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false}>}
     */
    processVariables;
    /**
     * @member {Array.<CodegenProperty{openApiType='VariableQueryParameterDto', baseName='caseInstanceVariables', complexType='VariableQueryParameterDto', getter='getCaseInstanceVariables', setter='setCaseInstanceVariables', description='null', dataType='VariableQueryParameterDto', datatypeWithEnum='VariableQueryParameterDto', dataFormat='null', name='caseInstanceVariables', min='null', max='null', defaultValue='null', defaultValueWithParam=' = VariableQueryParameterDto.constructFromObject(data['caseInstanceVariables']);', baseType='VariableQueryParameterDto', containerType='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='null', jsonSchema='{
  "$ref" : "#/components/schemas/VariableQueryParameterDto"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=false, isModel=true, isContainer=false, isString=false, isNumeric=false, isInteger=false, isLong=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isFreeFormObject=false, isArray=false, isMap=false, isEnum=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='CaseInstanceVariables', nameInSnakeCase='CASE_INSTANCE_VARIABLES', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false}>} caseInstanceVariables
     * @type {Array.<CodegenProperty{openApiType='VariableQueryParameterDto', baseName='caseInstanceVariables', complexType='VariableQueryParameterDto', getter='getCaseInstanceVariables', setter='setCaseInstanceVariables', description='null', dataType='VariableQueryParameterDto', datatypeWithEnum='VariableQueryParameterDto', dataFormat='null', name='caseInstanceVariables', min='null', max='null', defaultValue='null', defaultValueWithParam=' = VariableQueryParameterDto.constructFromObject(data['caseInstanceVariables']);', baseType='VariableQueryParameterDto', containerType='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='null', jsonSchema='{
  "$ref" : "#/components/schemas/VariableQueryParameterDto"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=false, isModel=true, isContainer=false, isString=false, isNumeric=false, isInteger=false, isLong=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isFreeFormObject=false, isArray=false, isMap=false, isEnum=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='CaseInstanceVariables', nameInSnakeCase='CASE_INSTANCE_VARIABLES', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false}>}
     */
    caseInstanceVariables;
    /**
     * @member {Boolean} variableNamesIgnoreCase
     * @type {Boolean}
     * @default false
     */
    variableNamesIgnoreCase = false;
    /**
     * @member {Boolean} variableValuesIgnoreCase
     * @type {Boolean}
     * @default false
     */
    variableValuesIgnoreCase = false;
    /**
     * @member {String} parentTaskId
     * @type {String}
     */
    parentTaskId;
    /**
     * @member {Array.<CodegenProperty{openApiType='TaskQueryDto', baseName='orQueries', complexType='TaskQueryDto', getter='getOrQueries', setter='setOrQueries', description='null', dataType='TaskQueryDto', datatypeWithEnum='TaskQueryDto', dataFormat='null', name='orQueries', min='null', max='null', defaultValue='null', defaultValueWithParam=' = TaskQueryDto.constructFromObject(data['orQueries']);', baseType='TaskQueryDto', containerType='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='null', jsonSchema='{
  "$ref" : "#/components/schemas/TaskQueryDto"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=false, isModel=true, isContainer=false, isString=false, isNumeric=false, isInteger=false, isLong=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isFreeFormObject=false, isArray=false, isMap=false, isEnum=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='OrQueries', nameInSnakeCase='OR_QUERIES', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false}>} orQueries
     * @type {Array.<CodegenProperty{openApiType='TaskQueryDto', baseName='orQueries', complexType='TaskQueryDto', getter='getOrQueries', setter='setOrQueries', description='null', dataType='TaskQueryDto', datatypeWithEnum='TaskQueryDto', dataFormat='null', name='orQueries', min='null', max='null', defaultValue='null', defaultValueWithParam=' = TaskQueryDto.constructFromObject(data['orQueries']);', baseType='TaskQueryDto', containerType='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='null', jsonSchema='{
  "$ref" : "#/components/schemas/TaskQueryDto"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=false, isModel=true, isContainer=false, isString=false, isNumeric=false, isInteger=false, isLong=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isFreeFormObject=false, isArray=false, isMap=false, isEnum=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='OrQueries', nameInSnakeCase='OR_QUERIES', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false}>}
     */
    orQueries;
    /**
     * @member {Array.<CodegenProperty{openApiType='TaskQueryDtoSorting', baseName='sorting', complexType='TaskQueryDtoSorting', getter='getSorting', setter='setSorting', description='null', dataType='TaskQueryDtoSorting', datatypeWithEnum='TaskQueryDtoSorting', dataFormat='null', name='sorting', min='null', max='null', defaultValue='null', defaultValueWithParam=' = TaskQueryDtoSorting.constructFromObject(data['sorting']);', baseType='TaskQueryDtoSorting', containerType='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='null', jsonSchema='{
  "$ref" : "#/components/schemas/TaskQueryDto_sorting"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=false, isModel=true, isContainer=false, isString=false, isNumeric=false, isInteger=false, isLong=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isFreeFormObject=false, isArray=false, isMap=false, isEnum=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='Sorting', nameInSnakeCase='SORTING', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false}>} sorting
     * @type {Array.<CodegenProperty{openApiType='TaskQueryDtoSorting', baseName='sorting', complexType='TaskQueryDtoSorting', getter='getSorting', setter='setSorting', description='null', dataType='TaskQueryDtoSorting', datatypeWithEnum='TaskQueryDtoSorting', dataFormat='null', name='sorting', min='null', max='null', defaultValue='null', defaultValueWithParam=' = TaskQueryDtoSorting.constructFromObject(data['sorting']);', baseType='TaskQueryDtoSorting', containerType='null', title='null', unescapedDescription='null', maxLength=null, minLength=null, pattern='null', example='null', jsonSchema='{
  "$ref" : "#/components/schemas/TaskQueryDto_sorting"
}', minimum='null', maximum='null', exclusiveMinimum=false, exclusiveMaximum=false, required=false, deprecated=false, hasMoreNonReadOnly=false, isPrimitiveType=false, isModel=true, isContainer=false, isString=false, isNumeric=false, isInteger=false, isLong=false, isNumber=false, isFloat=false, isDouble=false, isDecimal=false, isByteArray=false, isBinary=false, isFile=false, isBoolean=false, isDate=false, isDateTime=false, isUuid=false, isUri=false, isEmail=false, isFreeFormObject=false, isArray=false, isMap=false, isEnum=false, isReadOnly=false, isWriteOnly=false, isNullable=false, isSelfReference=false, isCircularReference=false, isDiscriminator=false, _enum=null, allowableValues=null, items=null, additionalProperties=null, vars=[], requiredVars=[], mostInnerItems=null, vendorExtensions={}, hasValidation=false, isInherited=false, discriminatorValue='null', nameInCamelCase='Sorting', nameInSnakeCase='SORTING', enumName='null', maxItems=null, minItems=null, maxProperties=null, minProperties=null, uniqueItems=false, multipleOf=null, isXmlAttribute=false, xmlPrefix='null', xmlName='null', xmlNamespace='null', isXmlWrapped=false}>}
     */
    sorting;

    

    /**
     * Constructs a new <code>TaskQueryDto</code>.
     * A Task query which defines a group of Tasks.
     * @alias module:model/TaskQueryDto
     */
    constructor() { 
        
        TaskQueryDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TaskQueryDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TaskQueryDto} obj Optional instance to populate.
     * @return {module:model/TaskQueryDto} The populated <code>TaskQueryDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TaskQueryDto();

            if (data.hasOwnProperty('processInstanceId')) {
                obj['processInstanceId'] = ApiClient.convertToType(data['processInstanceId'], 'String');
            }
            if (data.hasOwnProperty('processInstanceIdIn')) {
                obj['processInstanceIdIn'] = ApiClient.convertToType(data['processInstanceIdIn'], ['String']);
            }
            if (data.hasOwnProperty('processInstanceBusinessKey')) {
                obj['processInstanceBusinessKey'] = ApiClient.convertToType(data['processInstanceBusinessKey'], 'String');
            }
            if (data.hasOwnProperty('processInstanceBusinessKeyExpression')) {
                obj['processInstanceBusinessKeyExpression'] = ApiClient.convertToType(data['processInstanceBusinessKeyExpression'], 'String');
            }
            if (data.hasOwnProperty('processInstanceBusinessKeyIn')) {
                obj['processInstanceBusinessKeyIn'] = ApiClient.convertToType(data['processInstanceBusinessKeyIn'], ['String']);
            }
            if (data.hasOwnProperty('processInstanceBusinessKeyLike')) {
                obj['processInstanceBusinessKeyLike'] = ApiClient.convertToType(data['processInstanceBusinessKeyLike'], 'String');
            }
            if (data.hasOwnProperty('processInstanceBusinessKeyLikeExpression')) {
                obj['processInstanceBusinessKeyLikeExpression'] = ApiClient.convertToType(data['processInstanceBusinessKeyLikeExpression'], 'String');
            }
            if (data.hasOwnProperty('processDefinitionId')) {
                obj['processDefinitionId'] = ApiClient.convertToType(data['processDefinitionId'], 'String');
            }
            if (data.hasOwnProperty('processDefinitionKey')) {
                obj['processDefinitionKey'] = ApiClient.convertToType(data['processDefinitionKey'], 'String');
            }
            if (data.hasOwnProperty('processDefinitionKeyIn')) {
                obj['processDefinitionKeyIn'] = ApiClient.convertToType(data['processDefinitionKeyIn'], ['String']);
            }
            if (data.hasOwnProperty('processDefinitionName')) {
                obj['processDefinitionName'] = ApiClient.convertToType(data['processDefinitionName'], 'String');
            }
            if (data.hasOwnProperty('processDefinitionNameLike')) {
                obj['processDefinitionNameLike'] = ApiClient.convertToType(data['processDefinitionNameLike'], 'String');
            }
            if (data.hasOwnProperty('executionId')) {
                obj['executionId'] = ApiClient.convertToType(data['executionId'], 'String');
            }
            if (data.hasOwnProperty('caseInstanceId')) {
                obj['caseInstanceId'] = ApiClient.convertToType(data['caseInstanceId'], 'String');
            }
            if (data.hasOwnProperty('caseInstanceBusinessKey')) {
                obj['caseInstanceBusinessKey'] = ApiClient.convertToType(data['caseInstanceBusinessKey'], 'String');
            }
            if (data.hasOwnProperty('caseInstanceBusinessKeyLike')) {
                obj['caseInstanceBusinessKeyLike'] = ApiClient.convertToType(data['caseInstanceBusinessKeyLike'], 'String');
            }
            if (data.hasOwnProperty('caseDefinitionId')) {
                obj['caseDefinitionId'] = ApiClient.convertToType(data['caseDefinitionId'], 'String');
            }
            if (data.hasOwnProperty('caseDefinitionKey')) {
                obj['caseDefinitionKey'] = ApiClient.convertToType(data['caseDefinitionKey'], 'String');
            }
            if (data.hasOwnProperty('caseDefinitionName')) {
                obj['caseDefinitionName'] = ApiClient.convertToType(data['caseDefinitionName'], 'String');
            }
            if (data.hasOwnProperty('caseDefinitionNameLike')) {
                obj['caseDefinitionNameLike'] = ApiClient.convertToType(data['caseDefinitionNameLike'], 'String');
            }
            if (data.hasOwnProperty('caseExecutionId')) {
                obj['caseExecutionId'] = ApiClient.convertToType(data['caseExecutionId'], 'String');
            }
            if (data.hasOwnProperty('activityInstanceIdIn')) {
                obj['activityInstanceIdIn'] = ApiClient.convertToType(data['activityInstanceIdIn'], ['String']);
            }
            if (data.hasOwnProperty('tenantIdIn')) {
                obj['tenantIdIn'] = ApiClient.convertToType(data['tenantIdIn'], ['String']);
            }
            if (data.hasOwnProperty('withoutTenantId')) {
                obj['withoutTenantId'] = ApiClient.convertToType(data['withoutTenantId'], 'Boolean');
            }
            if (data.hasOwnProperty('assignee')) {
                obj['assignee'] = ApiClient.convertToType(data['assignee'], 'String');
            }
            if (data.hasOwnProperty('assigneeExpression')) {
                obj['assigneeExpression'] = ApiClient.convertToType(data['assigneeExpression'], 'String');
            }
            if (data.hasOwnProperty('assigneeLike')) {
                obj['assigneeLike'] = ApiClient.convertToType(data['assigneeLike'], 'String');
            }
            if (data.hasOwnProperty('assigneeLikeExpression')) {
                obj['assigneeLikeExpression'] = ApiClient.convertToType(data['assigneeLikeExpression'], 'String');
            }
            if (data.hasOwnProperty('assigneeIn')) {
                obj['assigneeIn'] = ApiClient.convertToType(data['assigneeIn'], ['String']);
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = ApiClient.convertToType(data['owner'], 'String');
            }
            if (data.hasOwnProperty('ownerExpression')) {
                obj['ownerExpression'] = ApiClient.convertToType(data['ownerExpression'], 'String');
            }
            if (data.hasOwnProperty('candidateGroup')) {
                obj['candidateGroup'] = ApiClient.convertToType(data['candidateGroup'], 'String');
            }
            if (data.hasOwnProperty('candidateGroupExpression')) {
                obj['candidateGroupExpression'] = ApiClient.convertToType(data['candidateGroupExpression'], 'String');
            }
            if (data.hasOwnProperty('candidateUser')) {
                obj['candidateUser'] = ApiClient.convertToType(data['candidateUser'], 'String');
            }
            if (data.hasOwnProperty('candidateUserExpression')) {
                obj['candidateUserExpression'] = ApiClient.convertToType(data['candidateUserExpression'], 'String');
            }
            if (data.hasOwnProperty('includeAssignedTasks')) {
                obj['includeAssignedTasks'] = ApiClient.convertToType(data['includeAssignedTasks'], 'Boolean');
            }
            if (data.hasOwnProperty('involvedUser')) {
                obj['involvedUser'] = ApiClient.convertToType(data['involvedUser'], 'String');
            }
            if (data.hasOwnProperty('involvedUserExpression')) {
                obj['involvedUserExpression'] = ApiClient.convertToType(data['involvedUserExpression'], 'String');
            }
            if (data.hasOwnProperty('assigned')) {
                obj['assigned'] = ApiClient.convertToType(data['assigned'], 'Boolean');
            }
            if (data.hasOwnProperty('unassigned')) {
                obj['unassigned'] = ApiClient.convertToType(data['unassigned'], 'Boolean');
            }
            if (data.hasOwnProperty('taskDefinitionKey')) {
                obj['taskDefinitionKey'] = ApiClient.convertToType(data['taskDefinitionKey'], 'String');
            }
            if (data.hasOwnProperty('taskDefinitionKeyIn')) {
                obj['taskDefinitionKeyIn'] = ApiClient.convertToType(data['taskDefinitionKeyIn'], ['String']);
            }
            if (data.hasOwnProperty('taskDefinitionKeyLike')) {
                obj['taskDefinitionKeyLike'] = ApiClient.convertToType(data['taskDefinitionKeyLike'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('nameNotEqual')) {
                obj['nameNotEqual'] = ApiClient.convertToType(data['nameNotEqual'], 'String');
            }
            if (data.hasOwnProperty('nameLike')) {
                obj['nameLike'] = ApiClient.convertToType(data['nameLike'], 'String');
            }
            if (data.hasOwnProperty('nameNotLike')) {
                obj['nameNotLike'] = ApiClient.convertToType(data['nameNotLike'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('descriptionLike')) {
                obj['descriptionLike'] = ApiClient.convertToType(data['descriptionLike'], 'String');
            }
            if (data.hasOwnProperty('priority')) {
                obj['priority'] = ApiClient.convertToType(data['priority'], 'Number');
            }
            if (data.hasOwnProperty('maxPriority')) {
                obj['maxPriority'] = ApiClient.convertToType(data['maxPriority'], 'Number');
            }
            if (data.hasOwnProperty('minPriority')) {
                obj['minPriority'] = ApiClient.convertToType(data['minPriority'], 'Number');
            }
            if (data.hasOwnProperty('dueDate')) {
                obj['dueDate'] = ApiClient.convertToType(data['dueDate'], 'Date');
            }
            if (data.hasOwnProperty('dueDateExpression')) {
                obj['dueDateExpression'] = ApiClient.convertToType(data['dueDateExpression'], 'String');
            }
            if (data.hasOwnProperty('dueAfter')) {
                obj['dueAfter'] = ApiClient.convertToType(data['dueAfter'], 'Date');
            }
            if (data.hasOwnProperty('dueAfterExpression')) {
                obj['dueAfterExpression'] = ApiClient.convertToType(data['dueAfterExpression'], 'String');
            }
            if (data.hasOwnProperty('dueBefore')) {
                obj['dueBefore'] = ApiClient.convertToType(data['dueBefore'], 'Date');
            }
            if (data.hasOwnProperty('dueBeforeExpression')) {
                obj['dueBeforeExpression'] = ApiClient.convertToType(data['dueBeforeExpression'], 'String');
            }
            if (data.hasOwnProperty('followUpDate')) {
                obj['followUpDate'] = ApiClient.convertToType(data['followUpDate'], 'Date');
            }
            if (data.hasOwnProperty('followUpDateExpression')) {
                obj['followUpDateExpression'] = ApiClient.convertToType(data['followUpDateExpression'], 'String');
            }
            if (data.hasOwnProperty('followUpAfter')) {
                obj['followUpAfter'] = ApiClient.convertToType(data['followUpAfter'], 'Date');
            }
            if (data.hasOwnProperty('followUpAfterExpression')) {
                obj['followUpAfterExpression'] = ApiClient.convertToType(data['followUpAfterExpression'], 'String');
            }
            if (data.hasOwnProperty('followUpBefore')) {
                obj['followUpBefore'] = ApiClient.convertToType(data['followUpBefore'], 'String');
            }
            if (data.hasOwnProperty('followUpBeforeExpression')) {
                obj['followUpBeforeExpression'] = ApiClient.convertToType(data['followUpBeforeExpression'], 'String');
            }
            if (data.hasOwnProperty('followUpBeforeOrNotExistent')) {
                obj['followUpBeforeOrNotExistent'] = ApiClient.convertToType(data['followUpBeforeOrNotExistent'], 'Date');
            }
            if (data.hasOwnProperty('followUpBeforeOrNotExistentExpression')) {
                obj['followUpBeforeOrNotExistentExpression'] = ApiClient.convertToType(data['followUpBeforeOrNotExistentExpression'], 'String');
            }
            if (data.hasOwnProperty('createdOn')) {
                obj['createdOn'] = ApiClient.convertToType(data['createdOn'], 'Date');
            }
            if (data.hasOwnProperty('createdOnExpression')) {
                obj['createdOnExpression'] = ApiClient.convertToType(data['createdOnExpression'], 'String');
            }
            if (data.hasOwnProperty('createdAfter')) {
                obj['createdAfter'] = ApiClient.convertToType(data['createdAfter'], 'Date');
            }
            if (data.hasOwnProperty('createdAfterExpression')) {
                obj['createdAfterExpression'] = ApiClient.convertToType(data['createdAfterExpression'], 'String');
            }
            if (data.hasOwnProperty('createdBefore')) {
                obj['createdBefore'] = ApiClient.convertToType(data['createdBefore'], 'Date');
            }
            if (data.hasOwnProperty('createdBeforeExpression')) {
                obj['createdBeforeExpression'] = ApiClient.convertToType(data['createdBeforeExpression'], 'String');
            }
            if (data.hasOwnProperty('delegationState')) {
                obj['delegationState'] = ApiClient.convertToType(data['delegationState'], 'String');
            }
            if (data.hasOwnProperty('candidateGroups')) {
                obj['candidateGroups'] = ApiClient.convertToType(data['candidateGroups'], ['String']);
            }
            if (data.hasOwnProperty('candidateGroupsExpression')) {
                obj['candidateGroupsExpression'] = ApiClient.convertToType(data['candidateGroupsExpression'], 'String');
            }
            if (data.hasOwnProperty('withCandidateGroups')) {
                obj['withCandidateGroups'] = ApiClient.convertToType(data['withCandidateGroups'], 'Boolean');
            }
            if (data.hasOwnProperty('withoutCandidateGroups')) {
                obj['withoutCandidateGroups'] = ApiClient.convertToType(data['withoutCandidateGroups'], 'Boolean');
            }
            if (data.hasOwnProperty('withCandidateUsers')) {
                obj['withCandidateUsers'] = ApiClient.convertToType(data['withCandidateUsers'], 'Boolean');
            }
            if (data.hasOwnProperty('withoutCandidateUsers')) {
                obj['withoutCandidateUsers'] = ApiClient.convertToType(data['withoutCandidateUsers'], 'Boolean');
            }
            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
            if (data.hasOwnProperty('suspended')) {
                obj['suspended'] = ApiClient.convertToType(data['suspended'], 'Boolean');
            }
            if (data.hasOwnProperty('taskVariables')) {
                obj['taskVariables'] = ApiClient.convertToType(data['taskVariables'], [VariableQueryParameterDto]);
            }
            if (data.hasOwnProperty('processVariables')) {
                obj['processVariables'] = ApiClient.convertToType(data['processVariables'], [VariableQueryParameterDto]);
            }
            if (data.hasOwnProperty('caseInstanceVariables')) {
                obj['caseInstanceVariables'] = ApiClient.convertToType(data['caseInstanceVariables'], [VariableQueryParameterDto]);
            }
            if (data.hasOwnProperty('variableNamesIgnoreCase')) {
                obj['variableNamesIgnoreCase'] = ApiClient.convertToType(data['variableNamesIgnoreCase'], 'Boolean');
            }
            if (data.hasOwnProperty('variableValuesIgnoreCase')) {
                obj['variableValuesIgnoreCase'] = ApiClient.convertToType(data['variableValuesIgnoreCase'], 'Boolean');
            }
            if (data.hasOwnProperty('parentTaskId')) {
                obj['parentTaskId'] = ApiClient.convertToType(data['parentTaskId'], 'String');
            }
            if (data.hasOwnProperty('orQueries')) {
                obj['orQueries'] = ApiClient.convertToType(data['orQueries'], [TaskQueryDto]);
            }
            if (data.hasOwnProperty('sorting')) {
                obj['sorting'] = ApiClient.convertToType(data['sorting'], [TaskQueryDtoSorting]);
            }
        }
        return obj;
    }
}


/**
 * Allowed values for the <code>delegationState</code> property.
 * @enum {String}
 * @readonly
 */
TaskQueryDto['DelegationStateEnum'] = {

    /**
     * value: "PENDING"
     * @const
     */
    "PENDING": "PENDING",

    /**
     * value: "RESOLVED"
     * @const
     */
    "RESOLVED": "RESOLVED"
};



export default TaskQueryDto;

